# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem 'mysql2'
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
default: &default
  adapter: mysql2
  encoding: utf8
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: root
  password:
  socket: /tmp/mysql.sock

development:
  <<: *default
  database: pictweet5_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: pictweet5_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: pictweet5_production
  username: pictweet5
  password: <%= ENV['PICTWEET5_DATABASE_PASSWORD'] %>


# database.ymlとは
# Railsアプリケーションのデータベースの設定ファイルです。
# ここを編集することで、データベースの設定を運用環境事に変更できる仕組みになっている。

# 運用環境
# システムをどこで使用するか定められている環境を運用環境と呼びます。
# 運用環境を使い分けることで、効率的に作業を行うことが可能になり３種類ある。

# development | 開発環境 | 主にアプリケーションを開発をする際に使用する環境
# test        | テスト環境 | 主にアプリケーションの動作をテストする際に使用する環境
# production  | 本番環境  | アプリケーションを実際にリリースする際に使用する環境

# このように環境が別れている理由は、環境ごとに設定の変更が必要なケースが多いため、

# RDB,RDBMS 
# RDBとは表形式でデータを管理するデータベースで行と列を持っている。
# 行を「レコード」列を「カラム」という。
# RDBを管理するシステムのことをRDBMSという
# Mysql
# RDBMSの１つで、RDBMS各種には大きな差がなく、他にも同じようなRDBMSがあるが
# Mysqlを採用しているのは下記の理由もある。
# ・拡張機能が多い
# ・小規模から大規模のデータも取扱が可能
# ・柔軟性が高い
