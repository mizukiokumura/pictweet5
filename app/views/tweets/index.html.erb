<%= form_with(url: search_tweets_path, local: true, method: :get, class: "search-form") do |form| %>
  <%= form.text_field :keyword, placeholder: "投稿を検索する", class: "search-input" %>
  <%= form.submit "検索", class: "search-btn" %>
<% end %>
<div class="contents row">
  <% @tweets.each do |tweet|%>
   <%=  render partial: "tweet", locals: {tweet: tweet }%>
  <%end%>
</div>

<%# Tweetモデルに対して「belogns_to User」という形でアソシエーションを定義しているので、
Tweetモデルのインスタンスが入った変数.userと記述すると、インスタンスが属しているUserモデルのインスタンスを取得できる。 %>

<%# renderメソッド
部分テンプレートを呼び出す際に利用するメソッド。
呼び出す部分テンプレートはpartial(英訳:部分的)というオプションで指定する。

partialオプション
renderメソッドで使用できるオプション。partialというオプションをつけ、部分テンプレート名を指定する事で、
該当する部分テンプレートを表示できる。
書き方れい
<% render partial: "sample" >

renderメソッドでは、値を渡すためにlocalsというオプションを使用できる。
localsオプション
「renderメソッドで使用できる」オプション
localsというオプションをつけることで、部分テンプレート内でその変数を使えるようになる。
書き方例
<% render partial: "sample", lovals: {post: "hello!"} >
{post: "hello!"}というのは通常の変数で表すと post = "hello!" と書いているのと同じ意味。 %>

<%# searchアクションの定義
collectionとmember
ルーティングを設定する際に使用できる。
これを使用すると、生成されるルーティングのURLと実行されるコントローラーを任意にカステムできる。
collectionはルーティングに:idがつかず、memberは:idがつくという違いがある。
collection例)
resources :tweets do
  collection do
    get 'search'
  end
end

collectionのルーティング
search_tweets GET  /tweets/search(.:format)

member例)
resources :tweets do
  member do
    get 'search'
  end
end

memberのルーティング
search_tweet GET /tweets/:id/search(.:format)
今回の検索機能の場合、詳細ページのような:idを指定して特定のページに行く必要はないため、
collectionを使用してルーティングを設定する。
 %>
